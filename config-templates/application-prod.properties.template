# Configuration Assolution Backend - Production Optimisée
spring.application.name=assolution-backend
server.port=8080

# ===============================
# BASE DE DONNEES - PRODUCTION
# ===============================
spring.datasource.url=jdbc:postgresql://postgres:5432/assolution_prod
spring.datasource.username=assolution_user
spring.datasource.password=${DB_PASSWORD_PROD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Pool de connexions optimisé pour démarrage rapide ET performance
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=900000
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.pool-name=AssolutionHikariCP
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.initialization-fail-timeout=30000
spring.datasource.hikari.connection-test-query=SELECT 1

# ===============================
# JPA / HIBERNATE - PRODUCTION OPTIMISÉ
# ===============================
spring.jpa.hibernate.ddl-auto=none
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.use_sql_comments=false
spring.jpa.properties.hibernate.jdbc.batch_size=50
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=true

# ✅ OPTIMISATIONS HIBERNATE POUR DÉMARRAGE RAPIDE
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.properties.hibernate.dialect.storage_engine=innodb
spring.jpa.properties.hibernate.connection.autocommit=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.defer-datasource-initialization=false
spring.jpa.open-in-view=false

# ✅ DÉSACTIVER LA VALIDATION SCHEMA AU DÉMARRAGE (PLUS RAPIDE)
spring.jpa.hibernate.ddl-auto=none
spring.jpa.generate-ddl=false
spring.sql.init.mode=never

# ===============================
# LOGGING - PRODUCTION (SIMPLIFIÉ POUR ÉVITER LES PROBLÈMES DE PERMISSIONS)
# ===============================
logging.level.root=WARN
logging.level.com.assolution.inscriptions=INFO
logging.level.org.springframework.web=WARN
logging.level.org.springframework.security=INFO
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN

# Format des logs pour la production (console uniquement)
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{40} - %msg%n

# ===============================
# ACTUATOR - PRODUCTION (HEALTH CHECK PUBLIC, AUTRES ENDPOINTS SÉCURISÉS)
# ===============================
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always
management.endpoint.health.group.readiness.include=readinessState,db
management.endpoint.health.group.liveness.include=livenessState,diskSpace
management.endpoint.health.probes.enabled=true
management.health.db.enabled=true
management.health.diskspace.enabled=true
management.health.diskspace.threshold=1GB

# Configuration des endpoints de monitoring
management.endpoints.web.base-path=/actuator
management.server.port=8080
management.endpoint.health.cache.time-to-live=10s

# ✅ DÉSACTIVER COMPLÈTEMENT LA SÉCURITÉ SUR LE HEALTH CHECK
management.security.enabled=false
management.endpoint.health.enabled=true

# ===============================
# SECURITY JWT - PRODUCTION
# ===============================
jwt.secret=${JWT_SECRET_PROD}
jwt.expiration=3600000
jwt.refresh-expiration=86400000

# ===============================
# CORS - PRODUCTION (RESTRICTIF)
# ===============================
cors.allowed-origins=${CORS_ALLOWED_ORIGINS}
cors.allowed-methods=GET,POST,PUT,DELETE
cors.allowed-headers=Authorization,Content-Type,X-Requested-With
cors.allow-credentials=true
cors.max-age=3600

# ===============================
# STRIPE - PRODUCTION
# ===============================
stripe.secret-key=${STRIPE_SECRET_KEY_PROD}
stripe.webhook-secret=${STRIPE_WEBHOOK_SECRET_PROD}

# ===============================
# EMAIL - PRODUCTION - ✅ UTILISATION DES VERSIONS _PROD
# ===============================
spring.mail.host=${EMAIL_HOST_PROD}
spring.mail.port=587
spring.mail.username=${EMAIL_USER_PROD}
spring.mail.password=${EMAIL_PASSWORD_PROD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

email.from=noreply@assolution.com
email.base-url=${EMAIL_BASE_URL}

# ===============================
# UPLOAD FILES - PRODUCTION
# ===============================
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=20MB
app.upload.dir=/app/uploads/

# ===============================
# OPTIMISATIONS SPRING BOOT POUR DÉMARRAGE RAPIDE
# ===============================

# ✅ Désactiver les fonctionnalités non essentielles au démarrage
spring.main.lazy-initialization=false
spring.jmx.enabled=false
spring.output.ansi.enabled=never

# ✅ Optimisations Web
spring.mvc.async.request-timeout=30000
spring.mvc.dispatch-options-request=false

# ✅ Optimisations Jackson
spring.jackson.serialization.write-dates-as-timestamps=true
spring.jackson.default-property-inclusion=NON_NULL

# ✅ Désactiver certaines auto-configurations coûteuses
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration,org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration,org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration,org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration

# ✅ Optimisation des ressources statiques (désactivées en prod)
spring.web.resources.add-mappings=false
spring.mvc.static-path-pattern=/static/**

# ===============================
# CACHE - PRODUCTION OPTIMISÉ
# ===============================
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=500,expireAfterWrite=180s,expireAfterAccess=60s
spring.cache.cache-names=users,inscriptions,config

# ===============================
# SECURITY - PRODUCTION
# ===============================
server.error.include-message=never
server.error.include-binding-errors=never
server.error.include-stacktrace=never
server.error.include-exception=false

# ✅ SÉCURITÉ SPRING - PERMETTRE ACCÈS PUBLIC AU HEALTH CHECK UNIQUEMENT
# Désactiver l'authentification par défaut pour les actuators
spring.security.user.name=admin
spring.security.user.password=${ADMIN_PASSWORD_PROD:-secure_default_password_2024}
spring.security.user.roles=ADMIN

# ✅ CONFIGURATION SPÉCIFIQUE POUR DÉSACTIVER L'AUTH SUR HEALTH CHECK
# Ces propriétés permettent l'accès public au health check uniquement
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always
management.endpoints.web.cors.allowed-origins=*
management.endpoints.web.cors.allowed-methods=GET,OPTIONS

# ===============================
# SERVER CONFIG - PRODUCTION
# ===============================
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json,application/xml
server.compression.min-response-size=2048

# Threads et performance
server.tomcat.threads.min-spare=20
server.tomcat.threads.max=200
server.tomcat.max-connections=8192
server.tomcat.accept-count=100
server.tomcat.connection-timeout=20000

# Graceful shutdown
server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=30s

# ===============================
# MONITORING & OBSERVABILITY
# ===============================
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.percentiles.http.server.requests=0.5,0.95,0.99
management.metrics.distribution.slo.http.server.requests=50ms,100ms,200ms,300ms,500ms,1s

# ===============================
# VALIDATION
# ===============================
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false

# ===============================
# TIMEZONE
# ===============================
spring.jackson.time-zone=Europe/Paris
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss