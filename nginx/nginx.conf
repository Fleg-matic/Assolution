user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Format de logs personnalisé avec plus d'infos
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Optimisations de performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 50M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    send_timeout 60s;

    # Sécurité
    server_tokens off;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_types
        application/javascript
        application/json
        application/xml
        text/css
        text/javascript
        text/plain
        text/xml
        application/atom+xml
        application/rss+xml
        application/xhtml+xml
        image/svg+xml;

    # ==========================================
    # UPSTREAMS DÉFINITION - BACKEND SEULEMENT
    # ==========================================
    
    # Backend Spring Boot
    upstream backend {
        server backend:8080 max_fails=3 fail_timeout=30s weight=1;
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }

    # ✅ PLUS BESOIN D'UPSTREAM FRONTEND - fichiers servis directement

    # ==========================================
    # RATE LIMITING ZONES
    # ==========================================
    
    # Zone pour les authentifications (très strict)
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    
    # Zone pour l'API générale
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/m;
    
    # Zone pour le trafic général (frontend)
    limit_req_zone $binary_remote_addr zone=general:10m rate=100r/m;
    
    # Zone pour les assets statiques
    limit_req_zone $binary_remote_addr zone=static:10m rate=200r/m;

    # ==========================================
    # CACHE ZONES (optionnel)
    # ==========================================
    
    # Cache pour les assets statiques
    proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static_cache:10m max_size=100m inactive=60m use_temp_path=off;

    # ==========================================
    # CONFIGURATIONS SERVEUR
    # ==========================================
    
    include /etc/nginx/conf.d/*.conf;
}