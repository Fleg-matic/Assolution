# Configuration Nginx pour Assolution
# HTTP Server (Production prête pour HTTPS)
server {
    listen 80;
    server_name localhost 192.168.1.22;
    
    # Redirection HTTPS (à décommenter quand SSL sera configuré)
    # return 301 https://$server_name$request_uri;

    # En attendant SSL, on sert en HTTP
    root /var/www/html;
    index index.html;

    # Logs spécifiques au site
    access_log /var/log/nginx/assolution_access.log main;
    error_log /var/log/nginx/assolution_error.log warn;

    # Rate limiting pour différentes sections
    location /api/auth/ {
        limit_req zone=login burst=10 nodelay;
        limit_req_status 429;
        
        # Headers pour l'API
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Proxy vers le backend
        proxy_pass http://backend;
        proxy_redirect off;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # API générale
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        limit_req_status 429;
        
        # Headers pour l'API
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Proxy vers le backend
        proxy_pass http://backend;
        proxy_redirect off;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Gestion des WebSockets (si nécessaire)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Health check interne (pas de rate limit)
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Actuator endpoints (restreints)
    location /actuator/ {
        # Accès limité aux IPs locales
        allow 127.0.0.1;
        allow 192.168.1.0/24;
        allow 10.0.0.0/8;
        deny all;
        
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Assets statiques du backend (si nécessaire)
    location /static/ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        proxy_pass http://backend;
    }

    # Frontend Angular - Gestion SPA
    location / {
        limit_req zone=general burst=30 nodelay;
        
        # Headers pour le frontend
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Proxy vers le frontend
        proxy_pass http://frontend;
        proxy_redirect off;
        
        # Timeouts plus courts pour le frontend
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # Gestion des erreurs
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
    }
    
    location = /404.html {
        root /usr/share/nginx/html;
    }
}

# Configuration HTTPS (à utiliser quand les certificats seront disponibles)
# server {
#     listen 443 ssl http2;
#     server_name localhost 192.168.1.22;
# 
#     # Certificats SSL
#     ssl_certificate /etc/nginx/ssl/assolution.crt;
#     ssl_certificate_key /etc/nginx/ssl/assolution.key;
# 
#     # Configuration SSL moderne
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#     ssl_stapling on;
#     ssl_stapling_verify on;
# 
#     # Headers de sécurité HTTPS
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#     add_header X-Frame-Options SAMEORIGIN always;
#     add_header X-Content-Type-Options nosniff always;
#     add_header X-XSS-Protection "1; mode=block" always;
# 
#     # Reste de la configuration identique au HTTP
#     # [Copier toutes les locations du serveur HTTP ici]
# }