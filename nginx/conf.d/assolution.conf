# ==========================================
# RATE LIMITING ZONES
# ==========================================
limit_req_zone $binary_remote_addr zone=login:10m rate=5r/s;
limit_req_zone $binary_remote_addr zone=api:10m rate=20r/s;
limit_req_zone $binary_remote_addr zone=static:10m rate=200r/s;
limit_req_zone $binary_remote_addr zone=general:10m rate=30r/s;

# ==========================================
# UPSTREAM BACKEND OPTIMISÉ
# ==========================================
upstream backend {
    server backend:8080 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

# ==========================================
# CACHE CONFIGURATION
# ==========================================
proxy_cache_path /tmp/nginx_cache levels=1:2 keys_zone=api_cache:10m max_size=50m inactive=30m use_temp_path=off;

# ==========================================
# WEBSOCKET UPGRADE MAP
# ==========================================
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

# ==========================================
# MAIN SERVER CONFIGURATION
# ==========================================
server {
    listen 80;
    server_name localhost 192.168.1.22;
    
    # Logs spécifiques au site (OPTIMISÉ)
    access_log /var/log/nginx/assolution_access.log combined buffer=16k flush=5s;
    error_log /var/log/nginx/assolution_error.log warn;

    # ==========================================
    # HEALTH CHECKS & MONITORING
    # ==========================================
    
    # Health check Nginx (pas de rate limit)
    location /nginx-health {
        access_log off;
        return 200 "nginx healthy\n";
        add_header Content-Type text/plain;
    }

    # Health check global (via backend) - OPTIMISÉ
    location /health {
        access_log off;
        proxy_pass http://backend/actuator/health;
        proxy_set_header Host $host;
        proxy_connect_timeout 5s;
        proxy_read_timeout 5s;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }

    # ==========================================
    # API BACKEND ROUTES
    # ==========================================
    
    # Authentication endpoints (très strict) - OPTIMISÉ
    location /api/auth/ {
        limit_req zone=login burst=10 nodelay;
        limit_req_status 429;
        
        # Headers pour l'API
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # Proxy vers le backend via upstream (OPTIMISÉ)
        proxy_pass http://backend/api/auth/;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        
        # Timeouts optimisés pour auth
        proxy_connect_timeout 5s;
        proxy_send_timeout 15s;
        proxy_read_timeout 15s;
        
        # Buffers pour auth
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
        
        # Headers de sécurité pour auth
        add_header X-Content-Type-Options nosniff always;
        add_header X-Frame-Options DENY always;
    }

    # API générale - OPTIMISÉ
    location /api/ {
        limit_req zone=api burst=40 nodelay;
        limit_req_status 429;
        
        # Headers pour l'API
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # Proxy vers le backend via upstream (OPTIMISÉ)
        proxy_pass http://backend/api/;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        
        # Timeouts ajustés
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Support WebSockets (si nécessaire)
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        
        # Buffers optimisés
        proxy_buffering on;
        proxy_buffer_size 8k;
        proxy_buffers 16 8k;
        proxy_busy_buffers_size 16k;
    }

    # Cache pour certaines réponses API
    location ~* /api/(config|public)/ {
        proxy_pass http://backend;
        proxy_cache api_cache;
        proxy_cache_valid 200 5m;
        proxy_cache_key "$scheme$request_method$host$request_uri";
        add_header X-Cache-Status $upstream_cache_status;
        
        # Mêmes headers que parent
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }

    # Actuator endpoints (accès restreint) - OPTIMISÉ
    location /api/actuator/ {
        # Accès limité aux IPs locales et containers
        allow 127.0.0.1;
        allow 192.168.0.0/16;
        allow 172.16.0.0/12;
        allow 10.0.0.0/8;
        deny all;
        
        proxy_pass http://backend/api/actuator/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        # Timeouts encore plus courts + keepalive
        proxy_connect_timeout 3s;
        proxy_read_timeout 5s;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        
        # Pas de buffer pour monitoring
        proxy_buffering off;
    }

    # ==========================================
    # ASSETS STATIQUES BACKEND
    # ==========================================
    
    location /api/static/ {
        limit_req zone=static burst=100 nodelay;
        
        proxy_pass http://backend/api/static/;
        proxy_set_header Host $host;
        
        # Cache côté navigateur
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # Cache côté proxy amélioré
        proxy_cache api_cache;
        proxy_cache_valid 200 1h;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_background_update on;
        proxy_cache_lock on;
    }

    # ==========================================
    # FRONTEND ANGULAR (OPTIMISÉ)
    # ==========================================
    
    # Assets statiques du frontend - OPTIMISÉ
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|map)$ {
        limit_req zone=static burst=200 nodelay;
        
        # Servir directement depuis le système de fichiers
        root /usr/share/nginx/html;
        
        # Cache optimisé
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # Gestion des erreurs 404 pour assets
        try_files $uri =404;
        
        # Compression statique + ETag
        gzip_static on;
        etag on;
        
        # Headers performance
        add_header X-Content-Type-Options nosniff;
        tcp_nodelay on;
    }

    # Routes Angular SPA - OPTIMISÉ
    location / {
        limit_req zone=general burst=60 nodelay;
        
        # Servir les fichiers statiques directement
        root /usr/share/nginx/html;
        index index.html;
        
        # SPA routing - toutes les routes vers index.html
        try_files $uri $uri/ /index.html;
        
        # Pas de cache pour index.html + headers performance
        location = /index.html {
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
            
            # ETag pour détection changements
            etag on;
            tcp_nodelay on;
        }
        
        # Headers de sécurité
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
    }

    # ==========================================
    # GESTION DES ERREURS
    # ==========================================
    
    # Pages d'erreur personnalisées
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    error_page 429 /429.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    location = /429.html {
        root /usr/share/nginx/html;
        return 429 "Rate limit exceeded. Please try again later.\n";
        add_header Content-Type text/plain;
        internal;
    }
}