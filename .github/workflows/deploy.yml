name: Deploy to Production

on:
    push:
        branches: [main]
    workflow_dispatch: # Permet de déclencher manuellement

env:
    REGISTRY: ghcr.io
    IMAGE_NAME_BACKEND: ${{ github.repository }}-backend
    IMAGE_NAME_FRONTEND: ${{ github.repository }}-frontend

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            # Tests backend
            - name: Set up JDK 21
              uses: actions/setup-java@v3
              with:
                  java-version: "21"
                  distribution: "temurin"

            - name: Cache Maven dependencies
              uses: actions/cache@v3
              with:
                  path: ~/.m2
                  key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}

            - name: Run backend tests
              run: |
                  cd backend
                  mvn clean test

            # Tests frontend
            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: "18"
                  cache: "npm"
                  cache-dependency-path: frontend/package-lock.json

            - name: Install frontend dependencies
              run: |
                  cd frontend
                  npm ci

            - name: Run frontend tests
              run: |
                  cd frontend
                  npm run test -- --watch=false --browsers=ChromeHeadless

    build-and-push:
        needs: test
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Log in to Container Registry
              uses: docker/login-action@v2
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Set up JDK 21 for backend build
              uses: actions/setup-java@v3
              with:
                  java-version: "21"
                  distribution: "temurin"

            - name: Build backend JAR
              run: |
                  cd backend
                  mvn clean package -DskipTests

            - name: Extract metadata for backend
              id: meta-backend
              uses: docker/metadata-action@v4
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BACKEND }}
                  tags: |
                      type=ref,event=branch
                      type=sha,prefix={{branch}}-
                      type=raw,value=latest,enable={{is_default_branch}}

            - name: Build and push backend image
              uses: docker/build-push-action@v4
              with:
                  context: ./backend
                  push: true
                  tags: ${{ steps.meta-backend.outputs.tags }}
                  labels: ${{ steps.meta-backend.outputs.labels }}

            - name: Extract metadata for frontend
              id: meta-frontend
              uses: docker/metadata-action@v4
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_FRONTEND }}
                  tags: |
                      type=ref,event=branch
                      type=sha,prefix={{branch}}-
                      type=raw,value=latest,enable={{is_default_branch}}

            - name: Build and push frontend image
              uses: docker/build-push-action@v4
              with:
                  context: ./frontend
                  push: true
                  tags: ${{ steps.meta-frontend.outputs.tags }}
                  labels: ${{ steps.meta-frontend.outputs.labels }}

    # Note: Render déploie automatiquement depuis GitHub
    # Pas besoin de job deploy séparé pour la phase gratuite

    notify:
        needs: [test, build-and-push]
        runs-on: ubuntu-latest
        if: always()

        steps:
            - name: Notify build status
              run: |
                  echo "Build completed. Render will auto-deploy from main branch."
