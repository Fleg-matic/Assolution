# Frontend Dockerfile pour Development
FROM node:22-alpine

# M√©tadonn√©es
LABEL maintainer="Assolution Team"
LABEL version="1.0"
LABEL description="Assolution Frontend - Development"

# Variables d'environnement
ENV NODE_ENV=development
ENV NG_CLI_ANALYTICS=false
ENV BACKEND_URL=http://localhost:8080

# Installation des outils syst√®me
RUN apk add --no-cache \
    curl \
    bash \
    git

# Installation d'Angular CLI globalement
RUN npm install -g @angular/cli@20

# Cr√©ation d'un utilisateur non-root
RUN addgroup -g 1001 -S nodejs && \
    adduser -S angular -u 1001 -G nodejs

# R√©pertoire de travail
WORKDIR /app

# Copie des fichiers de configuration des d√©pendances
COPY package*.json ./

# Installation des d√©pendances
RUN npm ci --only=production=false

# Copie du code source
COPY --chown=angular:nodejs . .

# Changement vers l'utilisateur non-root
USER angular

# Port expos√©
EXPOSE 4200

# Script de d√©marrage pour le d√©veloppement
COPY --chown=angular:nodejs <<EOF /app/start-dev.sh
#!/bin/bash
set -e

echo "üé® Starting Assolution Frontend (Development)"
echo "üìä Node Version: \$(node --version)"
echo "üìä Angular CLI Version: \$(ng --version | head -n 1)"
echo "üîß Environment: \${NODE_ENV}"
echo "üîó Backend URL: \${BACKEND_URL}"

# V√©rifier si le backend est accessible (optionnel en dev)
if [ ! -z "\${BACKEND_URL}" ] && [[ "\${BACKEND_URL}" != "http://localhost:8080" ]]; then
    echo "‚è≥ Checking backend connectivity..."
    timeout 30 bash -c 'until curl -f \${BACKEND_URL}/actuator/health 2>/dev/null; do sleep 2; done' || echo "‚ö†Ô∏è  Backend not yet available, continuing anyway..."
fi

# D√©marrer le serveur de d√©veloppement
echo "üöÄ Starting Angular development server..."
exec ng serve --host 0.0.0.0 --port 4200 --poll 2000 --disable-host-check
EOF

RUN chmod +x /app/start-dev.sh

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:4200 || exit 1

# Point d'entr√©e
ENTRYPOINT ["/app/start-dev.sh"]