{
  "scripts": {
    "ng": "ng",
    "start": "ng serve --configuration=development --host=0.0.0.0 --port=4200",
    "start:dev": "ng serve --configuration=development --host=0.0.0.0 --port=4200 --open",
    "start:prod": "ng serve --configuration=production --host=0.0.0.0 --port=4200",
    "build": "ng build --configuration=production",
    "build:prod": "ng build --configuration=production --output-hashing=all",
    "build:dev": "ng build --configuration=development",
    "build:stats": "ng build --configuration=production --stats-json",
    "watch": "ng build --watch --configuration=development",
    "test": "ng test --no-watch --browsers=ChromeHeadless",
    "test:watch": "ng test --watch --browsers=Chrome",
    "test:ci": "ng test --no-watch --no-progress --browsers=ChromeHeadless --code-coverage",
    "test:ci-safe": "DISABLE_SONAR=true ng test --no-watch --no-progress --browsers=ChromeHeadless --code-coverage",
    "test:coverage": "ng test --code-coverage --no-watch --browsers=ChromeHeadless",
    "e2e": "cypress open",
    "e2e:headless": "cypress run",
    "e2e:ci": "cypress run --browser chrome --headless",
    "lint": "ng lint",
    "lint:fix": "ng lint --fix",
    "format": "prettier --write \"src/**/*.{ts,html,scss,json}\"",
    "format:check": "prettier --check \"src/**/*.{ts,html,scss,json}\"",
    "analyze": "ng build --stats-json && npx webpack-bundle-analyzer dist/inscriptions-frontend/stats.json",
    "serve:prod": "ng build --configuration=production && npx http-server dist/inscriptions-frontend -p 4200 -c-1",
    "clean": "rimraf dist coverage .angular/cache",
    "clean:all": "rimraf dist coverage .angular node_modules package-lock.json",
    "audit": "npm audit --audit-level=moderate",
    "audit:fix": "npm audit fix",
    "update": "ng update",
    "update:check": "ng update --dry-run",
    "docker:build": "docker build -f Dockerfile.prod -t assolution-frontend:latest .",
    "docker:dev": "docker build -f Dockerfile -t assolution-frontend:dev .",
    "prebuild": "npm run clean",
    "postbuild": "echo 'Build completed successfully!'",
    "pretest": "echo 'Running tests...'",
    "prelint": "echo 'Running linter...'",
    "version:patch": "npm version patch",
    "version:minor": "npm version minor",
    "version:major": "npm version major"
  }
}
