# Dockerfile.prod pour le backend Spring Boot - Version Maven officielle
FROM maven:3.9.6-eclipse-temurin-21 AS builder

WORKDIR /build

# Copier les fichiers de build
COPY pom.xml .
COPY src ./src

# Vérifier la structure du projet
RUN echo "📁 Project structure:" && \
    ls -la . && \
    echo "📄 Maven version:" && \
    mvn --version

# Build de l'application
RUN echo "🔨 Building with Maven..." && \
    mvn clean package -DskipTests

# Trouver et copier le JAR
RUN echo "📦 Checking build artifacts:" && \
    ls -la target/ && \
    JAR_FILE=$(find target/ -name "*.jar" -not -name "*-sources.jar" -not -name "*-javadoc.jar" | head -1) && \
    echo "✅ Found JAR: $JAR_FILE" && \
    cp "$JAR_FILE" /build/app.jar && \
    ls -la /build/app.jar

# Stage final de production
FROM eclipse-temurin:21-jre-jammy

# Installer les outils nécessaires
RUN apt-get update && \
    apt-get install -y tini curl netcat-openbsd && \
    rm -rf /var/lib/apt/lists/*

# Créer utilisateur non-root
RUN groupadd -g 1001 appuser && \
    useradd -r -u 1001 -g appuser appuser

# Créer répertoires et copier le JAR
WORKDIR /app
RUN mkdir -p /app/logs
COPY --from=builder --chown=appuser:appuser /build/app.jar /app/app.jar
RUN chown -R appuser:appuser /app

# Créer le script de démarrage
COPY --chown=appuser:appuser <<EOF /app/start-prod.sh
#!/bin/bash

echo "🏭 Starting Assolution Backend (Production)"
echo "📊 Java Version: \$(java -version 2>&1 | head -1)"
echo "🔧 Active Profile: \${SPRING_PROFILES_ACTIVE:-prod}"
echo "💾 Database Host: \${DB_HOST:-postgres}"
echo "🚀 JVM Options: \${JAVA_OPTS}"

# Attendre la base de données
echo "⏳ Waiting for database connection..."
while ! nc -z \${DB_HOST:-postgres} \${DB_PORT:-5432}; do 
sleep 1
done
echo "✅ Database connection established!"

# Démarrer l'application Spring Boot
echo "🚀 Starting Spring Boot application..."
exec java \${JAVA_OPTS} \\
    -Djava.security.egd=file:/dev/./urandom \\
    -Dspring.profiles.active=\${SPRING_PROFILES_ACTIVE:-prod} \\
    -jar /app/app.jar
EOF

RUN chmod +x /app/start-prod.sh

# Utiliser l'utilisateur non-root
USER appuser

# Exposer le port
EXPOSE 8080

# Point d'entrée
ENTRYPOINT ["tini", "--", "/app/start-prod.sh"]