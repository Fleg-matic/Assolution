# Dockerfile.prod pour le backend Spring Boot
FROM eclipse-temurin:21-jdk AS builder

WORKDIR /build

# Copier les fichiers de build
COPY pom.xml .
COPY src ./src
COPY mvnw* ./

# Donner les permissions d'exécution
RUN chmod +x ./mvnw || true

# Build de l'application
RUN ./mvnw clean package -DskipTests || mvn clean package -DskipTests

# Vérifier et renommer le JAR
RUN echo "📦 Checking build artifacts:" && \
    ls -la target/ && \
    JAR_FILE=$(find target/ -name "*.jar" -not -name "*-sources.jar" -not -name "*-javadoc.jar" | head -1) && \
    echo "Found JAR: $JAR_FILE" && \
    cp "$JAR_FILE" /build/assolution-backend.jar && \
    ls -la /build/assolution-backend.jar

# Stage final de production
FROM eclipse-temurin:21-jre-jammy

# Installer les outils nécessaires
RUN apt-get update && \
    apt-get install -y tini curl netcat-openbsd && \
    rm -rf /var/lib/apt/lists/*

# Créer utilisateur non-root
RUN groupadd -g 1001 appuser && \
    useradd -r -u 1001 -g appuser appuser

# Créer répertoires
WORKDIR /app
RUN mkdir -p /app/logs && chown -R appuser:appuser /app

# Copier le JAR
COPY --from=builder --chown=appuser:appuser /build/assolution-backend.jar /app/app.jar

# Vérifier que le JAR est bien copié
RUN ls -la /app/app.jar && \
    echo "✅ JAR file is present"

# Créer le script de démarrage corrigé
RUN cat > /app/start-prod.sh << 'EOF'
#!/bin/bash

echo "🏭 Starting Assolution Backend (Production)"
echo "📊 Java Version: $(java -version 2>&1 | head -1)"
echo "🔧 Active Profile: ${SPRING_PROFILES_ACTIVE:-prod}"
echo "💾 Database Host: ${DB_HOST:-postgres}"
echo "🚀 JVM Options: ${JAVA_OPTS}"

# Attendre la base de données
echo "⏳ Waiting for database connection..."
while ! nc -z ${DB_HOST:-postgres} ${DB_PORT:-5432}; do sleep 1
done
echo "✅ Database connection established!"

# Vérifier que le JAR existe
if [ ! -f "/app/app.jar" ]; then
    echo "❌ JAR file not found at /app/app.jar"
    ls -la /app/
    exit 1
fi

# Démarrer l'application Spring Boot avec la commande CORRECTE
echo "🚀 Starting Spring Boot application..."
echo "🔧 Command: java ${JAVA_OPTS} -jar /app/app.jar"

exec java ${JAVA_OPTS} \
    -Djava.security.egd=file:/dev/./urandom \
    -Dspring.profiles.active=${SPRING_PROFILES_ACTIVE:-prod} \
    -jar /app/app.jar
EOF

# Donner les permissions d'exécution
RUN chmod +x /app/start-prod.sh && \
    chown appuser:appuser /app/start-prod.sh

# Utiliser l'utilisateur non-root
USER appuser

# Exposer le port
EXPOSE 8080

# Point d'entrée
ENTRYPOINT ["tini", "--", "/app/start-prod.sh"]